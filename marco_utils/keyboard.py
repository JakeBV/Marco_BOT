import random

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


verified_dict = {'intruder': '–Ø –≤—Ç–æ—Ä–∂–µ–Ω–µ—Ü',
                 'robot': '–Ø —Ä–æ–±–æ—Ç',
                 'human': '–Ø —á–µ–ª–æ–≤–µ–∫'}

activities_dict = {'turn_off': [0, 'üëçüèø'],
                   'seldom': [25, '–ë—É–¥—É –æ—Ç–≤–µ—á–∞—Ç—å —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 25%'],
                   'sometimes': [50, '–ë—É–¥—É –æ—Ç–≤–µ—á–∞—Ç—å —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 50%'],
                   'often': [75, '–ë—É–¥—É –æ—Ç–≤–µ—á–∞—Ç—å —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 75%']}

start_dict = {'gif': '–û—Ç–ø—Ä–∞–≤–∏—Ç—å GIF', 'rascal': '–û—Ç–ø—Ä–∞–≤–∏—Ç—å GIF (–ï–Ω–æ—Ç –†–∞—Å–∫–∞–ª)', 'sticker': '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∏–∫–µ—Ä',
              'chimi-chara': '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∏–∫–µ—Ä (Chimi-Chara)', 'chimi-chara-2': '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∏–∫–µ—Ä (Chimi-Chara Part 2)',
              'when': '–ö–æ–≥–¥–∞ –Ω–æ–≤–∞—è —Å–µ—Ä–∏—è –∏–ª–∏ –≥–ª–∞–≤–∞?'}


def activity_settings_keyboard(current_activity):
    buttons = {0: ('turn_off', '–û—Ç–∫–ª—é—á–∏—Ç—å', '–°–µ–π—á–∞—Å –æ–Ω–∞ <b>–æ—Ç–∫–ª—é—á–µ–Ω–∞</b>'),
               25: ('seldom', '–†–µ–¥–∫–æ', '–°–µ–π—á–∞—Å —è <b>—Ä–µ–¥–∫–æ</b> –µ–µ –ø—Ä–æ—è–≤–ª—è—é'),
               50: ('sometimes', '–ò–Ω–æ–≥–¥–∞', '–°–µ–π—á–∞—Å —è <b>–∏–Ω–æ–≥–¥–∞</b> –µ–µ –ø—Ä–æ—è–≤–ª—è—é'),
               75: ('often', '–ß–∞—Å—Ç–æ', '–°–µ–π—á–∞—Å —è <b>—á–∞—Å—Ç–æ</b> –µ–µ –ø—Ä–æ—è–≤–ª—è—é')}
    activity_keyboard = InlineKeyboardMarkup()
    buttons_list = []
    text = ''
    for probability, button_and_text in buttons.items():
        if probability != current_activity:
            buttons_list.append(InlineKeyboardButton(button_and_text[1], callback_data=button_and_text[0]))
        else:
            text = button_and_text[2]
    activity_keyboard.row(*buttons_list)
    return activity_keyboard, text


def new_member_keyboard(user_id):
    member_keyboard = InlineKeyboardMarkup()
    for k, v in sorted(verified_dict.items(), key=lambda x: random.random()):
        member_keyboard.add(InlineKeyboardButton(v, callback_data=f'{k}={user_id}'))
    return member_keyboard


def spam_keyboard(user_id):
    sp_keyboard = InlineKeyboardMarkup()
    spam_dict = {'block': '–í—ã—Å—Ç–∞–≤–∏—Ç—å –∑–∞ –°—Ç–µ–Ω—ã',
                 'disable_antispam': '–û—Ç–∫–ª—é—á–∏—Ç—å –∞–Ω—Ç–∏—Å–ø–∞–º'}
    for k, v in spam_dict.items():
        sp_keyboard.add(InlineKeyboardButton(v, callback_data=f'{k}={user_id}'))
    return sp_keyboard


def start_keyboard(its_admin):
    st_keyboard = InlineKeyboardMarkup()
    st_keyboard.add(InlineKeyboardButton('–ß–∞—Ç', url='t.me/shingeki_no_kyojin'))
    for k, v in start_dict.items():
        st_keyboard.add(InlineKeyboardButton(v, switch_inline_query=k))
    st_keyboard.add(InlineKeyboardButton('–°—Ç–∏–∫–µ—Ä–ø–∞–∫', url='https://t.me/addstickers/Attack_on_Titan_Anime'))
    st_keyboard.add(InlineKeyboardButton('–°–¥–µ–ª–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–º', callback_data='create_memes'))
    if its_admin:
        st_keyboard.add(InlineKeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç', callback_data='send'))
    return st_keyboard


def memes_send(file_id):
    return InlineKeyboardMarkup().add(InlineKeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å', switch_inline_query=f'send_memes={file_id}'))


def cancel_button():
    return InlineKeyboardMarkup().add(InlineKeyboardButton('–û—Ç–º–µ–Ω–∞', callback_data='cancel'))
